<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTestConnection.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAABIhJREFUSEuV
        lGtMk2cYhlnU7M9+7IfJsixLxgTKmWgFlEM5bC3CnBqncypmGhN1sKCDyUFxKLANCopOwAGiyEDGVooi
        KicrlAEhcyJSWjkUAm4LEkUOnSgtd/Z85WUfX0G23cn9q/3u632e530fq8XUfMFraU+5//LBygA78mqy
        D9mX80BlgPvANX9Rf4X/8taCtUvYJ4troDLwbfo4gvwTWUs2kKfJWMTc7+PkNnIuWcbihKrP8fCmH5+T
        Fwr5z35I7rvq9z6L5ZUaYbf5h0RXNOatgU4hwcC1hQMs/fD6e/ijOgTDqk14qt6E0XoZepR+G1ksrxP7
        bWRkcE48YIOTX9gj/ysXKORiVGWuRWO+D9ou+0NfIcVo42ZM3j+MF91pMPadhbFHDmNnFKbuhmK8QYau
        MkkIi+UVt8faey4g5XM7nI5yQO5RZxQnu6HilBgNuZ54QNVN/LIBRl08TPozMPVnzQN0KyXBLJZX3G5r
        t38AZA6QEemAnCNOKEpyw1UG0P3MAT7kAX3zAb3lflIWy4sAK2YBnL81A+z/HWBRwRjNgAC+LJZX0gHb
        pefinIZfCjgpRj0BtAQYb1xPgKPzAOPNn2BEFWT8/UbguyyWV3KY7Wu3v/dEbZY7zh9zRtpBEeQRImTG
        OKLguAvK5CtRl+2Be5d98Gd1EB41hWNQHYWumnB03dyN3htb8Fj9MZ61bkV/RYAPi+W1d+Nby5I/s50q
        POEKdZ6n+T4Pq3dCfyscndWRaL8ZjXtVcdDUHUN3fQIGWxLxpC0Zk7pkczXGjghM/baTWiRFl0LizWKF
        otZMzG1RVqwzSuVeqMkNRkvJVnRU7MLgrT34684+GLuSaMDfCWfAAA8Uvp4sUigKHpoFfBNuh1P0Fmgu
        4B5gefoqcC3sLPXFmPoDOvWR+UMmwOhtqqBM4s4ihaLg3rkA7rFZAjQcoCEERi0HOM0DNBxghxmgv+K3
        kkUKlRohqp0HiHVCIQOoGGDUDIgTAvgKpukWvckihao6u1rNnTaJXvLXYTOAbA5Ag1emcQAPdPzIAYIF
        gKnuFDxu3oeRxm2YbN1C+ynQhUUKRYHVqnMeaCv2RnWmO0pTxMhPECMv3o3a5IYr6WJzm9pL/KG7vgvd
        teHQ14WZB2/4dS9VEErLbh237BxYpFDUGiXXnjO0gyozxOhUrsejlkMwaNNg6MmDoa8Yhv4SPB8ogmnw
        Ip0+m6rIoBtFV1UTaZ7B05kh27NIoSi8cHYG9PCQfkhELXLEJWpROXf6nDU0AwmFrKMWxVoMmQFUUtwv
        8VnBIoWi4GxLQBa95EvHXWdeMrWPPiZAEAFiFgBsNwPuFHpZs0ihKPjLhQAFswBaFRxgxAJgmgMYUUm1
        d4u8l7FIoWI+tX6VwvPJJlob5n1kCWinXUQLjQDRggqmNJGm8eZtiqEa6cJXdK4I4EiAJPlBUVNmtOPY
        xQSXaQUBahngiUqGF5rDpmfalKGJztSq0bb42OGm/Tbs8/+nqNB3ltBWfYMqcbyQ4CKmSlap87xsW4o2
        vK7M/OgV9reXyMrqb5zsdzaqwb2MAAAAAElFTkSuQmCC
</value>
  </data>
</root>